plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20-RC'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
}

group 'local.uniclog'
version = '0.1'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'local.uniclog'
    mainClass = 'local.uniclog.MainAppUi'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation 'org.controlsfx:controlsfx:11.1.2'

    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'org.slf4j:slf4j-simple:2.0.5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    implementation 'net.java.dev.jna:jna-platform:5.12.1'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.20-RC'
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip") as RegularFile
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    jpackage {
        appVersion = '0.1'
        icon = "src/main/resources/local/uniclog/img/txt_icon.ico"
        imageOptions = [
                "--vendor", "Uniclog Software",
                '--app-version', version
        ]
        installerType = 'msi'
        installerOptions = [
                '--win-dir-chooser', '--win-shortcut'
        ]
    }
}

jlinkZip {
    group = 'distribution'
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "uniclog_Project12"
        property "sonar.organization", "uniclog"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

kotlin {
    jvmToolchain(17)
}
